<nav class="text-center d-flex justify-content-center align-items-center" aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item">
            @if (CurrentPage == 0 || CurrentPage == 1 || TotalPage < 1)
            {
                <!--   <a class="page-link" style="pointer-events: none" aria-label="Previous">
                <span aria-hidden="true">«</span>
                <span class="sr-only">Previous</span>
            </a>-->
            }
            else
            {
                <a class="page-link" @onclick="@(() => OnClickPage(CurrentPage > 1 ? CurrentPage - 1 : 1))" aria-label="Previous">
                    <span aria-hidden="true">«</span>
                    <span class="sr-only">Previous</span>
                </a>
            }
        </li>
        @if (TotalPage > 1)
        {
            @foreach (var paginateRange in PAGINATE_RANGE)
            {
                <li class="page-item @(CheckActive(paginateRange))"
                    @onclick="() => OnPageNumberClicked(paginateRange)">
                    <a class="page-link">@(paginateRange)</a>
                </li>
            }
        }
        else if (TotalPage == 1)
        {
            /*
            @foreach (var paginateRange in PAGINATE_RANGE)
            {
                <li class="page-item @(CheckActive(paginateRange))"
                    style="pointer-events: none">
                    <a class="page-link">@(paginateRange)</a>
                </li>
            }
            */
        }
        else
        {
            <label>(Không có dữ liệu)</label>
        }

        <li class="page-item">
            @if (CurrentPage == TotalPage || TotalPage == 0)
            {
                <!--<a class="page-link" style="pointer-events: none" aria-label="Next">
                <span aria-hidden="true">»</span>
                <span class="sr-only">Next</span>
            </a>-->
            }
            else
            {
                <a class="page-link" @onclick="@(() => OnClickPage(CurrentPage < TotalPage ? CurrentPage + 1 : TotalPage))" aria-label="Next">
                    <span aria-hidden="true">»</span>
                    <span class="sr-only">Next</span>
                </a>
            }


        </li>
    </ul>
</nav>

@code {
    private const int delta = 2;

    [Parameter]
    public int CurrentPage { get; set; }

    [Parameter]
    public int TotalPage { get; set; }

    [Parameter]
    public Action<int> OnClickPage { get; set; }

    private List<string> PAGINATE_RANGE = new List<string>();

    private void OnPageNumberClicked(string paginate)
    {
        if (!"...".Equals(paginate?.Trim()))
        {
            OnClickPage.Invoke(int.Parse(paginate));
        }
    }

    private string CheckActive(string paginate)
    {
        return CurrentPage.ToString().Equals(paginate)  ? "active" : "";
    }

    protected override void OnInitialized()
    {
        PAGINATE_RANGE = this.CalculatePaging(TotalPage);
    }

    private List<string> CalculatePaging(int pageCount)
    {
        List<string> range = new List<string>();
        for (int i = Math.Max(delta, CurrentPage - delta); i <= Math.Min(pageCount - 1, CurrentPage + delta); i++)
        {
            range.Add(i.ToString());
        }

        if (CurrentPage - delta > 2)
        {
            range.Insert(0, "...");
        }

        if (CurrentPage + delta < pageCount - 1)
        {
            if (pageCount - 1 == CurrentPage + delta + 1)
            {
                range.Add((pageCount-1).ToString());
            } else {
                range.Add("...");
            }
        }

        if (pageCount > 1)
        {
            range.Insert(0, "1");
        }

        range.Add(pageCount.ToString());

        return range;
    }

}