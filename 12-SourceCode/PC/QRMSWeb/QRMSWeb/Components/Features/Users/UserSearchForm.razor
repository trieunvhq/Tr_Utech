@using QRMSWeb.Components.Common.Breadcrumb
@using QRMSWeb.Components.Common.SampleTable
@inject IJSRuntime _jsRuntime

<form autocomplete="off" class="search-body-form">
    <div class="row search-row-input">
        <div class="row form-group col-6">

            <label class="col-3 col-form-label">Tên tài khoản</label>
            <div class="col-9">
                <input type="text" placeholder=""
                       autocomplete="off"
                       value="@Username"
                       @onchange="@((evt) => UsernameChanged.InvokeAsync(evt.Value?.ToString()))"
                       class="form-control">
            </div>
        </div>

        <div class="row form-group col-6">
                <label class="col-3 col-form-label">Họ và tên</label>
                <div class="col-9">
                    <input type="text"
                           autocomplete="off"
                           value="@Fullname"
                           @onchange="@((evt) => FullnameChanged.InvokeAsync(evt.Value?.ToString()))"
                           placeholder="" class="form-control">
                </div>
            </div>
        </div>
    <div class="row search-row-input">
        <div class="row form-group col-6">
            <label class="col-3 col-form-label">Đơn vị</label>
            <div class="col-9">
                <input type="text"
                       autocomplete="off"
                       value="@InsuranceAgentName"
                       @onchange="@((evt) => InsuranceAgentNameChanged.InvokeAsync(evt.Value?.ToString()))"
                       placeholder="" class="form-control">
            </div>
        </div>

    </div>
    <div class="d-flex flex-row justify-content-end btn-row pb-0">
        <div class="button-items">
            <button type="button" class="btn btn-primary waves-effect waves-light" @onclick="@OnSearch">Tìm kiếm</button>
            <button type="button" class="btn btn-primary waves-effect mr-3" @onclick="@OnRefresh">Làm mới</button>
        </div>
    </div>
</form>

@code {

    [Parameter]
    public string Username { get; set; }

    [Parameter]
    public EventCallback<string> UsernameChanged { get; set; }

    [Parameter]
    public string Fullname { get; set; }

    [Parameter]
    public EventCallback<string> FullnameChanged { get; set; }

    [Parameter]
    public string InsuranceAgentName { get; set; }

    [Parameter]
    public EventCallback<string> InsuranceAgentNameChanged { get; set; }

    [Parameter]
    public Func<Task> OnRefresh { get; set; }

    [Parameter]
    public Func<Task> OnSearch { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {
            if (firstRender)
            {
                await _jsRuntime.InvokeVoidAsync("disableAutofill");
            }
        }
        catch (Exception e)
        {
            
        }
    }
}