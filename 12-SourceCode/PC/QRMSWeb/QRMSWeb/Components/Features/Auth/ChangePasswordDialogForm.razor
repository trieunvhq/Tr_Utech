@using QRMSWeb.Services
@using QRMSWeb.Models
@using QRMSWeb.Utils
@using QRMSWeb.Helper
@using Newtonsoft.Json;
@using Microsoft.JSInterop

@inject HttpClient _httpClient
@inject IJSRuntime _jsRuntime

<div class="modal fade " id="dialogChangeUserPassword" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Thay đổi mật khẩu</h5>
                <button type="button" class="close" aria-label="Close" @onclick="OnCloseDialog1">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="padding-bottom: 0px;">
                <div class="row">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-body contain-body-input-form">
                                <form @onsubmit:preventDefault @onsubmit="@OnSubmitForm" autocomplete="off">
                                    <div class="form-group col-12">
                                        <label class="col-12 col-form-labelt label-input-form">Mật khẩu hiện tại(*)</label>
                                        <div class="col-12">
                                            <input class="form-control"
                                                   @bind="CURRENT_PASSWORD"
                                                   autocomplete="off"
                                                   type="password"
                                                   placeholder="">
                                        </div>
                                    </div>
                                    <div class="form-group col-12">
                                        <label class="col-12 col-form-labelt label-input-form">Mật khẩu mới(*)</label>
                                        <div class="col-12">
                                            <input class="form-control"
                                                   @bind="NEW_PASSWORD"
                                                   autocomplete="off"
                                                   type="password"
                                                   placeholder="">
                                        </div>
                                    </div>
                                    <div class="form-group col-12">
                                        <label class="col-12 col-form-labelt label-input-form">Mật khẩu xác nhận(*)</label>
                                        <div class="col-12">
                                            <input class="form-control"
                                                   @bind="NEW_CONFIRM_PASSWORD"
                                                   autocomplete="off"
                                                   type="password"
                                                   placeholder="">
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row btn-row">
                    <div class="col-12 d-flex flex-row align-items-center justify-content-end">
                        <div class="button-items">
                            <button type="button" class="btn btn-warning waves-effect waves-light mr-3" disabled="@isSubmitting" @onclick="OnCloseDialog1">Đóng</button>
                            <button type="submit" class="btn btn-primary waves-effect waves-light mr-0" disabled="@isSubmitting" @onclick="OnSubmitForm">Thay đổi</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@code {

    private string CURRENT_PASSWORD { get; set; }
    private string NEW_PASSWORD { get; set; }
    private string NEW_CONFIRM_PASSWORD { get; set; }

    private bool isSubmitting = false;

    private UserService _userService;


    protected override void OnInitialized()
    {
        try
        {
            _userService = new UserService(_httpClient);
        }
        catch (Exception e)
        {
            _jsRuntime.InvokeVoidAsync("handleException", e.Message, "", "");
        }
    }

    private async Task OnInitData()
    {
        try
        {

        }
        catch (Exception e)
        {
            await _jsRuntime.InvokeVoidAsync("handleException", e.Message, "", "");
        }

        await InvokeAsync(StateHasChanged);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {
            if (firstRender)
            {
                await _jsRuntime.InvokeVoidAsync("disableAutofill");
                await OnInitData();
            }
        }
        catch (Exception e)
        {
            await _jsRuntime.InvokeVoidAsync("handleException", e.Message, "", "");
            await _jsRuntime.InvokeVoidAsync("closeModal", "dialogChangeUserPassword");
        }
    }

    private async Task OnSubmitForm()
    {
        try
        {
            isSubmitting = true;
            //validate

            if (NEW_PASSWORD != NEW_CONFIRM_PASSWORD)
            {
                await _jsRuntime.InvokeVoidAsync("showMessage", "Thông báo", "Mật khẩu xác nhận không đúng", "error");
                isSubmitting = false;
                return;
            }

            ChangePasswordModel changePasswordModel = new ChangePasswordModel();
            changePasswordModel.ID = (await AuthHelper.GetUser())?.ID ?? 0;
            changePasswordModel.CURRENT_PASSWORD = CURRENT_PASSWORD;
            changePasswordModel.NEW_PASSWORD = NEW_PASSWORD;
            changePasswordModel.NEW_CONFIRM_PASSWORD = NEW_CONFIRM_PASSWORD;

            var response = await _userService.ChangePassword(changePasswordModel);
            string responseBody = await response.Content.ReadAsStringAsync();
            var responseData = JsonConvert.DeserializeObject<ResponseData<Object>>(responseBody);
            if (!String.IsNullOrEmpty(responseData.ErrorCode) && responseData.ErrorCode != "0")
            {
                await _jsRuntime.InvokeVoidAsync("showMessage", "Thông báo", responseData.Message, "error");
            }
            else
            {
                await _jsRuntime.InvokeVoidAsync("showMessage", "Thông báo", responseData.Message, "success");
                await Task.Delay(2000);
                await _jsRuntime.InvokeVoidAsync("closeModal", "dialogChangeUserPassword");
            }
        }
        catch (Exception e)
        {
            await _jsRuntime.InvokeVoidAsync("handleException", e.Message, "", "");
        }

        isSubmitting = false;
    }

    private async Task OnCloseDialog1()
    {

        await _jsRuntime.InvokeVoidAsync("closeModal", "dialogChangeUserPassword");
    }


}
