@using QRMSWeb.Components.Common.Breadcrumb
@using QRMSWeb.Components.Common.SampleTable
@inject IJSRuntime _jsRuntime

<form autocomplete="off" class="search-body-form">
    <div class="row search-row-input">
        <div class="row form-group col-4">
            <label class="col-4 col-form-label">Loại nhãn</label>
            <div class="col-8">
               
                <select @onchange="@((evt) => ItemTypeChanged.InvokeAsync(evt.Value?.ToString() ?? string.Empty))"
                        class="form-control">
                    <option data-limit="70" value="" selected="@(ItemType == "")">---</option>
                    <option data-limit="70" value="I" selected="@(ItemType == "DC")">Dụng cụ, thiết bị</option>
                    <option data-limit="70" value="C" selected="@(ItemType == "NL")">Nguyên liệu</option>
                    <option data-limit="70" value="C" selected="@(ItemType == "TP")">Thành phẩm</option>
                </select>
            </div>
        </div>
        <div class="row form-group col-4">
            <label class="col-4 col-form-label">Số chỉ thị</label>
            <div class="col-8">
                <input type="text" placeholder=""
                       autocomplete="off"
                       value="@PurchaseOrderNo"
                       @onchange="@((evt) => PurchaseOrderNoChanged.InvokeAsync(evt.Value?.ToString()))"
                       class="form-control">
            </div>
        </div>
        
        <div class="row form-group col-4">
            <label class="col-4 col-form-label">Mã kho</label>
            <div class="col-8">
                <input type="text" placeholder=""
                       autocomplete="off"
                       value="@WareHouseCode"
                       @onchange="@((evt) => WareHouseCodeChanged.InvokeAsync(evt.Value?.ToString()))"
                       class="form-control">
            </div>
        </div>
        <div class="row form-group col-4">
            <label class="col-4 col-form-label">Trạng thái</label>
            <div class="col-8">                
                <select @onchange="@((evt) => PrintStatusChanged.InvokeAsync(evt.Value?.ToString() ?? string.Empty))"
                        class="form-control">
                    <option data-limit="70" value="" selected="@(PrintStatus == "")">---</option>
                    <option data-limit="70" value="I" selected="@(PrintStatus == "N")">Chưa in</option>
                    <option data-limit="70" value="C" selected="@(PrintStatus == "D")">Đang in</option>
                    <option data-limit="70" value="C" selected="@(PrintStatus == "Y")">Đã in</option>
                </select>
            </div>
        </div>

        <div class="row form-group col-4">
            <label class="col-4 col-form-label">Ngày mua hàng</label>
            <div class="col-8">
                <div class="input-group pjc-date-picker"
                     id="searchPurchaseOrderDate1" data-target-input="nearest">
                    <input type="text" class="form-control datetimepicker-input" data-target="#searchPurchaseOrderDate1"
                           id="searchPurchaseOrderDate" placeholder="ngày/tháng/năm" autocomplete="off" format="DD/MM/YYYY"
                           value="@PurchaseOrderDate" />
                    <div class="input-group-append" data-target="#searchPurchaseOrderDate1" data-toggle="datetimepicker">
                        <span class="input-group-text">
                            <i class="fa fa-calendar teal-color" style="color: cadetblue" aria-hidden="true"></i>
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="d-flex flex-row justify-content-end btn-row pb-0 button_search_footer1">
        <div class="button-items">
            <button type="button" class="btn btn-primary waves-effect waves-light" @onclick="@OnSearch">Tìm kiếm</button>
            <button type="button" class="btn btn-primary waves-effect mr-3" @onclick="@OnImport">Import</button>
        </div>
    </div>

</form>

@code {

    [Parameter]
    public string ItemType { get; set; }

    [Parameter]
    public EventCallback<string> ItemTypeChanged { get; set; }


    [Parameter]
    public string WareHouseCode { get; set; }

    [Parameter]
    public EventCallback<string> WareHouseCodeChanged { get; set; }

    [Parameter]
    public string PurchaseOrderNo { get; set; }

    [Parameter]
    public EventCallback<string> PurchaseOrderNoChanged { get; set; }

    [Parameter]
    public string PurchaseOrderDate { get; set; }

    [Parameter]
    public EventCallback<string> PurchaseOrderDateChanged { get; set; }

    [Parameter]
    public string PrintStatus { get; set; }

    [Parameter]
    public EventCallback<string> PrintStatusChanged { get; set; }

    [Parameter]
    public Func<Task> OnImport { get; set; }

    [Parameter]
    public Func<Task> OnSearch { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {
            if (firstRender)
            {
                await _jsRuntime.InvokeVoidAsync("disableAutofill");
                //set vn date
                await _jsRuntime.InvokeVoidAsync("vnDatePicker");
                StateHasChanged();
            }
        }
        catch (Exception e)
        {
            await _jsRuntime.InvokeVoidAsync("handleException", e.Message, "Có lỗi xảy ra", "");
        }
    }
}